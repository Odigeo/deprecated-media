var search_data = {"index":{"searchIndex":["actioncontroller","activerecord","activesupport","alivecontroller","api","apiresource","classmethods","applicationcontroller","applicationhelper","errorscontroller","faraday","connection","logger","object","ocean","oceanresourcecontroller","classmethods","oceanresourcemodel","classmethods","railtie","file","rails","rack","oceanapplicationcontroller","oceanscaffoldgenerator","oceansetupgenerator","rspec","selectiveracklogger","zerolog","zeromqlogger","add()","add_json_controller_specs()","add_json_view_spec()","add_json_views()","add_model_specs()","api_render()","api_user_url()","authenticate()","authorization_string()","authorize_action()","ban()","call()","call()","call_p()","collection()","collection_etag()","context()","debug?()","decode_credentials()","default_url_options()","delete()","encode_credentials()","error?()","extend_model()","extra_actions()","fatal?()","filtered_params()","find_connectee()","get()","hyperlinks()","included()","index()","index()","info?()","init_log_data_sender()","install_alive_controller_and_specs()","install_application_controller()","install_application_helper()","install_error_handling_and_specs()","install_generator_defaults()","install_initializers()","install_routes_file()","install_spec_helper_and_support_files()","invalidate()","invalidate()","latest_api_version()","log()","map_authorization()","missing_attributes?()","new()","new()","new()","ocean_resource_controller()","ocean_resource_model()","permit_with()","permitted?()","post()","pull_server()","pull_worker()","purge()","put()","remove_html_controller_specs()","remove_html_view_specs()","remove_html_views()","remove_request_specs()","remove_unwanted_stuff()","render_api_error()","render_head_204()","render_validation_errors()","replace_gemfile()","require_x_api_token()","set_updater()","setup_git()","show()","token()","touch_both()","trap_int()","turn_off_asset_pipeline()","turn_off_sessions_and_cookies()","update_routing_specs()","version_for()","warn?()","readme"],"longSearchIndex":["actioncontroller","activerecord","activesupport","alivecontroller","api","apiresource","apiresource::classmethods","applicationcontroller","applicationhelper","errorscontroller","faraday","faraday::connection","logger","object","ocean","ocean::oceanresourcecontroller","ocean::oceanresourcecontroller::classmethods","ocean::oceanresourcemodel","ocean::oceanresourcemodel::classmethods","ocean::railtie","ocean::railtie::file","ocean::railtie::rails","ocean::railtie::rails::rack","oceanapplicationcontroller","oceanscaffoldgenerator","oceansetupgenerator","rspec","selectiveracklogger","zerolog","zeromqlogger","zeromqlogger#add()","oceanscaffoldgenerator#add_json_controller_specs()","oceanscaffoldgenerator#add_json_view_spec()","oceanscaffoldgenerator#add_json_views()","oceanscaffoldgenerator#add_model_specs()","oceanapplicationcontroller#api_render()","applicationhelper#api_user_url()","api::authenticate()","api::authorization_string()","oceanapplicationcontroller#authorize_action()","api::ban()","api::call()","selectiveracklogger#call()","api::call_p()","apiresource::classmethods#collection()","oceanapplicationcontroller#collection_etag()","zerolog#context()","zeromqlogger#debug?()","api::decode_credentials()","oceanapplicationcontroller#default_url_options()","api::delete()","api::encode_credentials()","zeromqlogger#error?()","oceanscaffoldgenerator#extend_model()","ocean::oceanresourcecontroller#extra_actions()","zeromqlogger#fatal?()","oceanapplicationcontroller#filtered_params()","oceanapplicationcontroller#find_connectee()","api::get()","applicationhelper#hyperlinks()","apiresource::included()","alivecontroller#index()","apiresource::classmethods#index()","zeromqlogger#info?()","zerolog#init_log_data_sender()","oceansetupgenerator#install_alive_controller_and_specs()","oceansetupgenerator#install_application_controller()","oceansetupgenerator#install_application_helper()","oceansetupgenerator#install_error_handling_and_specs()","oceansetupgenerator#install_generator_defaults()","oceansetupgenerator#install_initializers()","oceansetupgenerator#install_routes_file()","oceansetupgenerator#install_spec_helper_and_support_files()","apiresource#invalidate()","apiresource::classmethods#invalidate()","apiresource::classmethods#latest_api_version()","zerolog#log()","api::map_authorization()","ocean::oceanresourcecontroller#missing_attributes?()","selectiveracklogger::new()","zerolog::new()","zeromqlogger::new()","ocean::oceanresourcecontroller::classmethods#ocean_resource_controller()","ocean::oceanresourcemodel::classmethods#ocean_resource_model()","object#permit_with()","api::permitted?()","api::post()","zerolog#pull_server()","zerolog#pull_worker()","api::purge()","api::put()","oceanscaffoldgenerator#remove_html_controller_specs()","oceanscaffoldgenerator#remove_html_view_specs()","oceanscaffoldgenerator#remove_html_views()","oceanscaffoldgenerator#remove_request_specs()","oceansetupgenerator#remove_unwanted_stuff()","oceanapplicationcontroller#render_api_error()","oceanapplicationcontroller#render_head_204()","oceanapplicationcontroller#render_validation_errors()","oceansetupgenerator#replace_gemfile()","oceanapplicationcontroller#require_x_api_token()","oceanapplicationcontroller#set_updater()","oceansetupgenerator#setup_git()","errorscontroller#show()","api::token()","apiresource#touch_both()","zerolog#trap_int()","oceansetupgenerator#turn_off_asset_pipeline()","oceansetupgenerator#turn_off_sessions_and_cookies()","oceanscaffoldgenerator#update_routing_specs()","api::version_for()","zeromqlogger#warn?()",""],"info":[["ActionController","","ActionController.html","",""],["ActiveRecord","","ActiveRecord.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["AliveController","","AliveController.html","","<p>The path /alive is implemented solely for the benefit of Varnish, which is\nset up to use it for health …\n"],["Api","","Api.html","","<p>This class encapsulates all logic for calling other API services.\n"],["ApiResource","","ApiResource.html","",""],["ApiResource::ClassMethods","","ApiResource/ClassMethods.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ErrorsController","","ErrorsController.html","",""],["Faraday","","Faraday.html","",""],["Faraday::Connection","","Faraday/Connection.html","",""],["Logger","","Logger.html","",""],["Object","","Object.html","",""],["Ocean","","Ocean.html","","<p>This is an “acts_as” type method to be used in ActiveRecord model\ndefinitions: “ocean_resource_controller”. …\n"],["Ocean::OceanResourceController","","Ocean/OceanResourceController.html","",""],["Ocean::OceanResourceController::ClassMethods","","Ocean/OceanResourceController/ClassMethods.html","",""],["Ocean::OceanResourceModel","","Ocean/OceanResourceModel.html","",""],["Ocean::OceanResourceModel::ClassMethods","","Ocean/OceanResourceModel/ClassMethods.html","",""],["Ocean::Railtie","","Ocean/Railtie.html","",""],["Ocean::Railtie::File","","Ocean/Railtie/File.html","",""],["Ocean::Railtie::Rails","","Ocean/Railtie/Rails.html","",""],["Ocean::Railtie::Rails::Rack","","Ocean/Railtie/Rails/Rack.html","",""],["OceanApplicationController","","OceanApplicationController.html","",""],["OceanScaffoldGenerator","","OceanScaffoldGenerator.html","",""],["OceanSetupGenerator","","OceanSetupGenerator.html","",""],["RSpec","","RSpec.html","",""],["SelectiveRackLogger","","SelectiveRackLogger.html","",""],["ZeroLog","","ZeroLog.html","",""],["ZeromqLogger","","ZeromqLogger.html","",""],["add","ZeromqLogger","ZeromqLogger.html#method-i-add","(level, msg, progname)",""],["add_json_controller_specs","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-add_json_controller_specs","()",""],["add_json_view_spec","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-add_json_view_spec","()",""],["add_json_views","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-add_json_views","()",""],["add_model_specs","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-add_model_specs","()",""],["api_render","OceanApplicationController","OceanApplicationController.html#method-i-api_render","(x, new: false)","<p>This is the main rendering function in Ocean. The argument <code>x</code>\ncan be a resource or a collection of resources …\n"],["api_user_url","ApplicationHelper","ApplicationHelper.html#method-i-api_user_url","(api_user_id)","<p>This is needed everywhere except inside the Auth service to render creator\nand updater links correctly. …\n"],["authenticate","Api","Api.html#method-c-authenticate","(username=API_USER, password=API_PASSWORD)","<p>Authenticates against the Auth service (which must be deployed and running)\nwith a given <code>username</code> and …\n"],["authorization_string","Api","Api.html#method-c-authorization_string","(extra_actions, controller, action, app=\"*\", context=\"*\", service=APP_NAME)","<p>Returns an authorisation string suitable for use in calls to\nApi.permitted?.  The <code>extra_actions</code> arg holds …\n"],["authorize_action","OceanApplicationController","OceanApplicationController.html#method-i-authorize_action","()","<p>Performs authorisation of the current action. Returns true if allowed,\nfalse if not. Calls the Auth service …\n"],["ban","Api","Api.html#method-c-ban","(path)","<p>Makes an internal BAN call to all Varnish instances. The call is made in\nparallel. Varnish will only …\n"],["call","Api","Api.html#method-c-call","(host_url, http_method, resource_name, path, args={}, headers={})","<p>Makes a HTTP request to <code>host_url</code> using the HTTP method\n<code>method</code>. The <code>resource_name</code> is used to obtain the …\n"],["call","SelectiveRackLogger","SelectiveRackLogger.html#method-i-call","(env)",""],["call_p","Api","Api.html#method-c-call_p","(url, http_method, path, args={}, headers={})","<p>Like Api.call, but makes the requests in parallel. (Parallel calls not\nimplemented yet.)\n"],["collection","ApiResource::ClassMethods","ApiResource/ClassMethods.html#method-i-collection","(bag)","<p>This is the successor to <code>index</code>. The difference is that\n<code>collection</code> is called with all params in the same …\n"],["collection_etag","OceanApplicationController","OceanApplicationController.html#method-i-collection_etag","(coll)","<p>Cache values for collections. Accepts a class or a scope.\n"],["context","ZeroLog","ZeroLog.html#method-i-context","()",""],["debug?","ZeromqLogger","ZeromqLogger.html#method-i-debug-3F","()",""],["decode_credentials","Api","Api.html#method-c-decode_credentials","(encoded)","<p>Takes encoded credentials (e.g. by Api.encode_credentials) and returns a\ntwo-element array where the …\n"],["default_url_options","OceanApplicationController","OceanApplicationController.html#method-i-default_url_options","(options = nil)","<p>TODO\n"],["delete","Api","Api.html#method-c-delete","(*args)","<p>Convenience method to make an internal DELETE request to the Ocean Api. The\n<code>resource_name</code> is used to …\n"],["encode_credentials","Api","Api.html#method-c-encode_credentials","(username, password)","<p>Encodes a username and password for authentication in the format used for\nstandard HTTP  authentication. …\n"],["error?","ZeromqLogger","ZeromqLogger.html#method-i-error-3F","()",""],["extend_model","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-extend_model","()",""],["extra_actions","Ocean::OceanResourceController","Ocean/OceanResourceController.html#method-i-extra_actions","()",""],["fatal?","ZeromqLogger","ZeromqLogger.html#method-i-fatal-3F","()",""],["filtered_params","OceanApplicationController","OceanApplicationController.html#method-i-filtered_params","(klass)","<p>Filtering away all non-accessible attributes from params\n"],["find_connectee","OceanApplicationController","OceanApplicationController.html#method-i-find_connectee","()","<p>Finding the other resource for connect/disconnect\n"],["get","Api","Api.html#method-c-get","(*args)","<p>Convenience method to make an internal GET request to the Ocean Api. The\n<code>resource_name</code> is used to obtain …\n"],["hyperlinks","ApplicationHelper","ApplicationHelper.html#method-i-hyperlinks","(links={})","<p>Used in Jbuilder templates to build hyperlinks\n"],["included","ApiResource","ApiResource.html#method-c-included","(base)",""],["index","AliveController","AliveController.html#method-i-index","()",""],["index","ApiResource::ClassMethods","ApiResource/ClassMethods.html#method-i-index","(conds={}, group_by=nil, substring=nil)","<p>This method implements the common behaviour in Ocean for requesting\ncollections of resources, including …\n"],["info?","ZeromqLogger","ZeromqLogger.html#method-i-info-3F","()",""],["init_log_data_sender","ZeroLog","ZeroLog.html#method-i-init_log_data_sender","(sub_push=\"sub_push\")","<p>Log data sender side (ruby, Ruby on Rails)\n"],["install_alive_controller_and_specs","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_alive_controller_and_specs","()",""],["install_application_controller","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_application_controller","()",""],["install_application_helper","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_application_helper","()",""],["install_error_handling_and_specs","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_error_handling_and_specs","()",""],["install_generator_defaults","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_generator_defaults","()",""],["install_initializers","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_initializers","()",""],["install_routes_file","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_routes_file","()",""],["install_spec_helper_and_support_files","OceanSetupGenerator","OceanSetupGenerator.html#method-i-install_spec_helper_and_support_files","()",""],["invalidate","ApiResource","ApiResource.html#method-i-invalidate","(avoid_self=false)","<p>Invalidate the member and all its collections in Varnish using a\n<code>BAN</code> requests to all caches in the Chef …\n"],["invalidate","ApiResource::ClassMethods","ApiResource/ClassMethods.html#method-i-invalidate","()","<p>Invalidate all members of this class in Varnish using a <code>BAN</code>\nrequests to all caches in the Chef environment. …\n"],["latest_api_version","ApiResource::ClassMethods","ApiResource/ClassMethods.html#method-i-latest_api_version","()","<p>Returns the latest version for the resource class. E.g.:\n\n<pre>&gt; ApiUser.latest_version\n&quot;v1&quot;</pre>\n"],["log","ZeroLog","ZeroLog.html#method-i-log","(data)","<p>This is a combination of a PUB main thread log data sender, pushing\ndirectly to the pull_server without …\n"],["map_authorization","Api","Api.html#method-c-map_authorization","(extra_actions, controller, action)","<p>Returns the hyperlink and HTTP method to use for an <code>action</code> in\na certain <code>controller</code>. First, the <code>DEFAULT_ACTIONS</code>\n…\n"],["missing_attributes?","Ocean::OceanResourceController","Ocean/OceanResourceController.html#method-i-missing_attributes-3F","()",""],["new","SelectiveRackLogger","SelectiveRackLogger.html#method-c-new","(app, opts = {})",""],["new","ZeroLog","ZeroLog.html#method-c-new","()",""],["new","ZeromqLogger","ZeromqLogger.html#method-c-new","()",""],["ocean_resource_controller","Ocean::OceanResourceController::ClassMethods","Ocean/OceanResourceController/ClassMethods.html#method-i-ocean_resource_controller","(extra_actions: {}, required_attributes: [:lock_version, :name, :description] )",""],["ocean_resource_model","Ocean::OceanResourceModel::ClassMethods","Ocean/OceanResourceModel/ClassMethods.html#method-i-ocean_resource_model","(index: [:name], search: :description, invalidate_member: INVALIDATE_MEMBER_DEFAULT, invalidate_collection: INVALIDATE_COLLECTION_DEFAULT )","<p>Declare the class as an Ocean Resource, include necessary modules and\ndefine what attributes can be indexed …\n"],["permit_with","Object","Object.html#method-i-permit_with","(status, user_id: 123, creator_uri: \"https://api.example.com/v1/api_users/#{user_id}\")","<p>For stubbing authorisation calls in RSpec\n"],["permitted?","Api","Api.html#method-c-permitted-3F","(token, args={})","<p>Performs authorisation against the Auth service. The <code>token</code>\nmust be a token received as a  result of a …\n"],["post","Api","Api.html#method-c-post","(*args)","<p>Convenience method to make an internal POST request to the Ocean Api. The\n<code>resource_name</code> is used to obtain …\n"],["pull_server","ZeroLog","ZeroLog.html#method-i-pull_server","(address=PUSH_ADDRESS)","<p>This is the PULL to PUSH server. It pushes the received data over IPC \nround-robin fashion to each PULL …\n"],["pull_worker","ZeroLog","ZeroLog.html#method-i-pull_worker","(address=PUSH_ADDRESS)","<p>This is the PULL worker\n"],["purge","Api","Api.html#method-c-purge","(*args)","<p>Makes an internal PURGE call to all Varnish instances. The call is made in\nparallel. Varnish will only …\n"],["put","Api","Api.html#method-c-put","(*args)","<p>Convenience method to make an internal PUT request to the Ocean Api. The\n<code>resource_name</code> is used to obtain …\n"],["remove_html_controller_specs","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-remove_html_controller_specs","()",""],["remove_html_view_specs","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-remove_html_view_specs","()",""],["remove_html_views","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-remove_html_views","()",""],["remove_request_specs","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-remove_request_specs","()",""],["remove_unwanted_stuff","OceanSetupGenerator","OceanSetupGenerator.html#method-i-remove_unwanted_stuff","()",""],["render_api_error","OceanApplicationController","OceanApplicationController.html#method-i-render_api_error","(status_code, *messages)","<p>JSON renderers\n"],["render_head_204","OceanApplicationController","OceanApplicationController.html#method-i-render_head_204","()",""],["render_validation_errors","OceanApplicationController","OceanApplicationController.html#method-i-render_validation_errors","(r)",""],["replace_gemfile","OceanSetupGenerator","OceanSetupGenerator.html#method-i-replace_gemfile","()",""],["require_x_api_token","OceanApplicationController","OceanApplicationController.html#method-i-require_x_api_token","()","<p>Ensures that there is an <code>X-API-Token</code> HTTP header in the\nrequest. Stores the token in @x_api_token for …\n"],["set_updater","OceanApplicationController","OceanApplicationController.html#method-i-set_updater","(obj)","<p>Updating created_by and updated_by\n"],["setup_git","OceanSetupGenerator","OceanSetupGenerator.html#method-i-setup_git","()",""],["show","ErrorsController","ErrorsController.html#method-i-show","()",""],["token","Api","Api.html#method-c-token","()","<p>Given that this service has authenticated successfully with the Auth\nservice, returns the token returned …\n"],["touch_both","ApiResource","ApiResource.html#method-i-touch_both","(other)","<p>Convenience function used to touch two resources in one call, e.g:\n\n<pre>@api_user.touch_both(@connectee)</pre>\n"],["trap_int","ZeroLog","ZeroLog.html#method-i-trap_int","(*sockets)","<p>Register a trap handler for INT, so we can clean up properly\n"],["turn_off_asset_pipeline","OceanSetupGenerator","OceanSetupGenerator.html#method-i-turn_off_asset_pipeline","()",""],["turn_off_sessions_and_cookies","OceanSetupGenerator","OceanSetupGenerator.html#method-i-turn_off_sessions_and_cookies","()",""],["update_routing_specs","OceanScaffoldGenerator","OceanScaffoldGenerator.html#method-i-update_routing_specs","()",""],["version_for","Api","Api.html#method-c-version_for","(resource_name)","<p>When given a symbol or string naming a resource, returns a string  such as\n<code>v1</code> naming the latest version …\n"],["warn?","ZeromqLogger","ZeromqLogger.html#method-i-warn-3F","()",""],["README","","README_rdoc.html","","<p>The Ocean gem\n<p>This repository contains the Ocean ruby gem, containing common framework\nfunctionality for …\n"]]}}